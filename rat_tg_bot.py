import telebot
import os
import time
import webbrowser
import requests
import platform
import shutil
import ctypes
import mouse
import PIL.ImageGrab
from subprocess import Popen, PIPE
from PIL import Image, ImageGrab, ImageDraw
from pySmartDL import SmartDL
from telebot import types
from telebot import apihelper


bot_token = '1921694304:AAG6uYf1dmXSsabiYMt_xImkpXGAxq8CnjQ'
bot = telebot.TeleBot(bot_token)
my_id = 904087174

user_dict = {}


class User:
    def __init__(self):
        keys = ['urldown', 'fin', 'curs']

        for key in keys:
            self.key = None


User.curs = 50

##–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
menu_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
btnscreen = types.KeyboardButton('üì∑–°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç')
btnmouse = types.KeyboardButton('üñ±–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à–∫–æ–π')
btnfiles = types.KeyboardButton('üìÇ–§–∞–π–ª—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã')
btnaddit = types.KeyboardButton('‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ')
btnmsgbox = types.KeyboardButton('üì©–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
btninfo = types.KeyboardButton('‚ùóÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
menu_keyboard.row(btnscreen, btnmouse)
menu_keyboard.row(btnfiles, btnaddit)
menu_keyboard.row(btninfo, btnmsgbox)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –§–∞–π–ª—ã –∏ –ü—Ä–æ—Ü–µ—Å—Å—ã
files_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
btnstart = types.KeyboardButton('‚úîÔ∏è–ó–∞–ø—É—Å—Ç–∏—Ç—å')
btndown = types.KeyboardButton('‚¨áÔ∏è–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª')
btnupl = types.KeyboardButton('‚¨ÜÔ∏è–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
files_keyboard.row(btnstart, btndown)
files_keyboard.row(btnupl, btnback)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
additionals_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
btncmd = types.KeyboardButton('‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É')
btnoff = types.KeyboardButton('‚õîÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä')
btnreb = types.KeyboardButton('‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä')
btninfo = types.KeyboardButton('üñ•–û –∫–æ–º–ø—å—é—Ç–µ—Ä–µ')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
additionals_keyboard.row(btnoff, btnreb)
additionals_keyboard.row(btncmd, btninfo)
additionals_keyboard.row(btnback)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º—ã—à—å
mouse_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
btnup = types.KeyboardButton('‚¨ÜÔ∏è')
btndown = types.KeyboardButton('‚¨áÔ∏è')
btnleft = types.KeyboardButton('‚¨ÖÔ∏è')
btnright = types.KeyboardButton('‚û°Ô∏è')
btnclick = types.KeyboardButton('üÜó')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
btncurs = types.KeyboardButton('–£–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–∞—Ö –∫—É—Ä—Å–æ—Ä–∞')
mouse_keyboard.row(btnup)
mouse_keyboard.row(btnleft, btnclick, btnright)
mouse_keyboard.row(btndown)
mouse_keyboard.row(btnback, btncurs)

logo = '''
‚ï≠‚îÅ‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚îÅ‚ïÆ ‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚îÅ‚î≥‚ïÆ
‚îÉ‚ï≠‚îÅ‚ïÆ‚îÉ‚ï≠‚îÅ‚ïÆ‚îÉ ‚îÉ‚ï≠‚ïÆ‚ï≠‚ïÆ‚îÉ‚ï≠‚îÅ‚ïÆ‚îÉ‚ï≠‚îÅ‚ïÆ‚îÉ‚îÉ
‚îÉ‚ï∞‚îÅ‚ïØ‚îÉ‚îÉ‚ï±‚ï∞‚ïØ ‚ï∞‚ïØ‚îÉ‚îÉ‚ï∞‚î´‚îÉ‚ï±‚îÉ‚îÉ‚îÉ‚ï±‚îÉ‚îÉ‚îÉ
‚îÉ‚ï≠‚îÅ‚îÅ‚î´‚îÉ‚ï±‚ï≠‚ïÆ ‚ï±‚ï±‚îÉ‚îÉ‚ï±‚îÉ‚îÉ‚ï±‚îÉ‚îÉ‚îÉ‚ï±‚îÉ‚îÉ‚îÉ‚ï±‚ï≠‚ïÆ
‚îÉ‚îÉ‚ï±‚ï±‚îÉ‚ï∞‚îÅ‚ïØ‚îÉ ‚ï±‚ï±‚îÉ‚îÉ‚ï±‚îÉ‚ï∞‚îÅ‚ïØ‚îÉ‚ï∞‚îÅ‚ïØ‚îÉ‚ï∞‚îÅ‚ïØ‚îÉ
‚ï∞‚ïØ‚ï±‚ï±‚ï∞‚îÅ‚îÅ‚îÅ‚ïØ ‚ï±‚ï±‚ï∞‚ïØ‚ï±‚ï∞‚îÅ‚îÅ‚îÅ‚îª‚îÅ‚îÅ‚îÅ‚îª‚îÅ‚îÅ‚îÅ‚ïØ

'''

info_msg = '''
*–û –∫–æ–º–∞–Ω–¥–∞—Ö*

_üì∑–°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç_ - –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞ –≤–º–µ—Å—Ç–µ —Å –º—ã—à–∫–æ–π
_üñ±–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à–∫–æ–π_ - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—ã—à–∫–æ–π
_üìÇ–§–∞–π–ª—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã_ - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –º–µ–Ω—é —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–æ–≤ –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
_‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ_ - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –º–µ–Ω—é —Å –¥–æ–ø. —Ñ—É–Ω–∫—Ü–∏—è–º–∏
_‚è™–ù–∞–∑–∞–¥‚è™_ - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

_‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É_ - –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤ cmd –ª—é–±—É—é —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
_‚õîÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä_ - –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –≤—ã–∫–ª—é—á–∞–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä
_‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä_ - –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä
_üñ•–û –∫–æ–º–ø—å—é—Ç–µ—Ä–µ_ - –ø–æ–∫–∞–∑—ã–≤–≤–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, ip, –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä

_‚úîÔ∏è–ó–∞–ø—É—Å—Ç–∏—Ç—å_ - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ª—é–±—ã–µ —Ñ–∞–π–ª—ã
_‚¨áÔ∏è–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª_ - —Å–∫–∞—á–∏–≤–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –≤–∞—à–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
_‚¨ÜÔ∏è–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª_ - –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –Ω–∞ –≤–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä

'''

print(logo)
bot.send_message(my_id, "–ü–ö –∑–∞–ø—É—â–µ–Ω", reply_markup=menu_keyboard)


@bot.message_handler(content_types=["text"])
def get_text_messages(message):
    if message.from_user.id == my_id:
        bot.send_chat_action(my_id, 'typing')
        if message.text == "üì∑–°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç":
            bot.send_chat_action(my_id, 'upload_photo')
            try:
                currentMouseX, currentMouseY = mouse.get_position()
                img = PIL.ImageGrab.grab()
                img.save("screen.png", "png")
                img = Image.open("screen.png")
                draw = ImageDraw.Draw(img)
                draw.polygon((currentMouseX, currentMouseY, currentMouseX, currentMouseY + 15, currentMouseX + 10,
                              currentMouseY + 10), fill="white", outline="black")
                img.save("screen_with_mouse.png", "PNG")
                bot.send_photo(my_id, open("screen_with_mouse.png", "rb"))
                os.remove("screen.png")
                os.remove("screen_with_mouse.png")
            except:
                bot.send_message(my_id, "–ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

        elif message.text == "üñ±–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à–∫–æ–π":
            bot.send_message(my_id, "üñ±–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à–∫–æ–π", reply_markup=mouse_keyboard)
            bot.register_next_step_handler(message, mouse_process)

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            back(message)

        elif message.text == "üìÇ–§–∞–π–ª—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã":
            bot.send_message(my_id, "üìÇ–§–∞–π–ª—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã", reply_markup=files_keyboard)
            bot.register_next_step_handler(message, files_process)

        elif message.text == "‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ":
            bot.send_message(my_id, "‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", reply_markup=additionals_keyboard)
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "‚ùóÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
            bot.send_message(my_id, info_msg, parse_mode="markdown")

        else:
            pass

    else:
        info_user(message)


def addons_process(message):
    if message.from_user.id == my_id:
        bot.send_chat_action(my_id, 'typing')
        if message.text == "‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É":
            bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É: ")
            bot.register_next_step_handler(message, cmd_process)

        elif message.text == "‚õîÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä":
            bot.send_message(my_id, "–í—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞...")
            os.system('shutdown -s /t 0 /f')
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä":
            bot.send_message(my_id, "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞...")
            os.system('shutdown -r /t 0 /f')
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "üñ•–û –∫–æ–º–ø—å—é—Ç–µ—Ä–µ":
            req = requests.get('http://ip.42.pl/raw')
            ip = req.text
            uname = os.getlogin()
            windows = platform.platform()
            processor = platform.processor()
            # print(*[line.decode('cp866', 'ignore') for line in Popen('tasklist', stdout=PIPE).stdout.readlines()])
            bot.send_message(my_id, f"*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* {uname}\n*IP:* {ip}\n*–û–°:* {windows}\n*–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:* {processor}",
                             parse_mode="markdown")

            bot.register_next_step_handler(message, addons_process)

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            back(message)

        else:
            pass

    else:
        info_user(message)


def files_process(message):
    if message.from_user.id == my_id:
        bot.send_chat_action(my_id, 'typing')

        if message.text == "‚úîÔ∏è–ó–∞–ø—É—Å—Ç–∏—Ç—å":
            bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞: ")
            bot.register_next_step_handler(message, start_process)

        elif message.text == "‚¨áÔ∏è–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª":
            bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞: ")
            bot.register_next_step_handler(message, downfile_process)

        elif message.text == "‚¨ÜÔ∏è–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª":
            bot.send_message(my_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ñ–∞–π–ª")
            bot.register_next_step_handler(message, uploadfile_process)

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            back(message)

        else:
            pass
    else:
        info_user(message)


def mouse_process(message):
    if message.from_user.id == my_id:
        if message.text == "‚¨ÜÔ∏è":
            currentMouseX, currentMouseY = mouse.get_position()
            mouse.move(currentMouseX, currentMouseY - User.curs)
            screen_process(message)

        elif message.text == "‚¨áÔ∏è":
            currentMouseX, currentMouseY = mouse.get_position()
            mouse.move(currentMouseX, currentMouseY + User.curs)
            screen_process(message)

        elif message.text == "‚¨ÖÔ∏è":
            currentMouseX, currentMouseY = mouse.get_position()
            mouse.move(currentMouseX - User.curs, currentMouseY)
            screen_process(message)

        elif message.text == "‚û°Ô∏è":
            currentMouseX, currentMouseY = mouse.get_position()
            mouse.move(currentMouseX + User.curs, currentMouseY)
            screen_process(message)

        elif message.text == "üÜó":
            mouse.click()
            screen_process(message)

        elif message.text == "–£–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–∞—Ö –∫—É—Ä—Å–æ—Ä–∞":
            bot.send_chat_action(my_id, 'typing')
            bot.send_message(my_id, f"–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–∞—Ö, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ä–∞–∑–º–∞—Ö {str(User.curs)}px",
                             reply_markup=mouse_keyboard)
            bot.register_next_step_handler(message, mousecurs_settings)

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            back(message)

        else:
            pass
    else:
        info_user(message)


def back(message):
    bot.register_next_step_handler(message, get_text_messages)
    bot.send_message(my_id, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=menu_keyboard)


def info_user(message):
    bot.send_chat_action(my_id, 'typing')
    alert = f"–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–ª—Å—è –∑–∞–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É: \"{message.text}\"\n\n"
    alert += f"user id: {str(message.from_user.id)}\n"
    alert += f"first name: {str(message.from_user.first_name)}\n"
    alert += f"last name: {str(message.from_user.last_name)}\n"
    alert += f"username: @{str(message.from_user.username)}"
    bot.send_message(my_id, alert, reply_markup=menu_keyboard)


def start_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        os.startfile(r'' + message.text)
        bot.send_message(my_id, f"–§–∞–π–ª –ø–æ –ø—É—Ç–∏ \"{message.text}\" –∑–∞–ø—É—Å—Ç–∏–ª—Å—è", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! –£–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–∞–π–ª", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)

def cmd_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        os.system(message.text, shell=True)
        bot.send_message(my_id, f"–ö–æ–º–∞–Ω–¥–∞ \"{message.text}\" –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", reply_markup=additionals_keyboard)
        bot.register_next_step_handler(message, addons_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
        bot.register_next_step_handler(message, addons_process)


def downfile_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        file_path = message.text
        if os.path.exists(file_path):
            bot.send_message(my_id, "–§–∞–π–ª –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            bot.send_chat_action(my_id, 'upload_document')
            file_doc = open(file_path, 'rb')
            bot.send_document(my_id, file_doc)
            bot.register_next_step_handler(message, files_process)
        else:
            bot.send_message(my_id, "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ø—É—Ç—å (–ü–†.: C:\\Documents\\File.doc)")
            bot.register_next_step_handler(message, files_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ø—É—Ç—å (–ü–†.: C:\\Documents\\File.doc)")
        bot.register_next_step_handler(message, files_process)


def uploadfile_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = message.document.file_name
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        bot.send_message(my_id, "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
        bot.register_next_step_handler(message, files_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç")
        bot.register_next_step_handler(message, files_process)


def mousecurs_settings(message):
    bot.send_chat_action(my_id, 'typing')
    if is_digit(message.text) == True:
        User.curs = int(message.text)
        bot.send_message(my_id, f"–†–∞–∑–º–∞—Ö –∫—É—Ä—Å–æ—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {str(User.curs)}px", reply_markup=mouse_keyboard)
        bot.register_next_step_handler(message, mouse_process)
    else:
        bot.send_message(my_id, "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ", reply_markup=mouse_keyboard)
        bot.register_next_step_handler(message, mousecurs_settings)


def screen_process(message):
    try:
        currentMouseX, currentMouseY = mouse.get_position()
        img = PIL.ImageGrab.grab()
        img.save("screen.png", "png")
        img = Image.open("screen.png")
        draw = ImageDraw.Draw(img)
        draw.polygon(
            (currentMouseX, currentMouseY, currentMouseX, currentMouseY + 15, currentMouseX + 10, currentMouseY + 10),
            fill="white", outline="black")
        img.save("screen_with_mouse.png", "PNG")
        bot.send_photo(my_id, open("screen_with_mouse.png", "rb"))
        bot.register_next_step_handler(message, mouse_process)
        os.remove("screen.png")
        os.remove("screen_with_mouse.png")
    except:
        bot.send_chat_action(my_id, 'typing')
        bot.send_message(my_id, "–ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        bot.register_next_step_handler(message, mouse_process)


def is_digit(string):
    if string.isdigit():
        return True
    else:
        try:
            float(string)
            return True
        except ValueError:
            return False


while True:
    try:
        bot.polling(none_stop=True, interval=0, timeout=20)
    except Exception as E:
        print(E.args)
        time.sleep(2)
